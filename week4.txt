//Factorial

#include <iostream>
using namespace std;

int fact(int n)
{       if(n==0)
                return 1;
        else
                return(n*fact(n-1));
}
int main() {
        int num;
        cout<<"Enter the number whose factorial you want to find: ";
        cin>>num;

        cout<<"Factorial of "<<num<<" is: "<<fact(num)<<"\n\n";

        return 0;
}

//gcd

#include <iostream>
using namespace std;

int gcd(int a,int b)
{       if(b==0)
                return a;
        if(a==0)
                return b;
        return gcd(b,a%b);
}
int main() {
        int num1,num2;
        cout<<"Enter the 2 numbers whose gcd you want: ";
        cin>>num1>>num2;
        cout<<"GCD of "<<num1<<" and "<<num2<<" is: "<<gcd(num1,num2)<<"\n\n";

        return 0;
}


//Fibonacci

#include <iostream>
using namespace std;

int fib(int num)
{       if(num==0||num==1)
                return 1;
        else
                return(fib(num-1)+fib(num-2));
}
int main() {
        int n;
        cout<<"Enter the nth term: ";
        cin>>n;
        int i=0;

        while(fib(i)<=n)
        {       cout<<fib(i)<<"  ";
                i++;
        }
        cout<<"\n\n";
        return 0;
}

//ToweOfHanoi


#include <iostream>
#include <math.h>
using namespace std;

int TowerOfHanoi(int n,char source,char destination,char auxillary)
{       int steps=0;
        if(n==1)
                cout<<"Move disk "<<n<<" from "<<source<<" to "<<destination<<"\n";
        else
        {
                TowerOfHanoi(n-1,source,auxillary,destination);
                cout<<"Move disk "<<n<<" from "<<source<<" to "<<destination<<"\n";
                TowerOfHanoi(n-1,auxillary,destination,source);

        }
}
int main()
{       int num;
        cout<<"Enter the number of disks: ";
        cin>>num;
        cout<<"\n\nNumber of disks is: "<<num<<"\n\n";
        TowerOfHanoi(num,'A','C','B');
        cout<<"\n Total number of Steps: "<<pow(2,num)-1;
        return 0;
}

